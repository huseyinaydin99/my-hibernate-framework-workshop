<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <!--
            @Entity
            @Table(name = "CUSTOMER")
            public class Customer { }
    -->
    <class name="tr.com.huseyinaydin.model.Customer" table="CUSTOMER">

        <!--
                @Id
                @GeneratedValue(strategy = GenerationType.IDENTITY)
                @Column(name = "CUSTOMER_ID", nullable = false)
                private int customerId;
        -->
        <id name="customerId" type="int">
            <column name="CUSTOMER_ID"/>
            <generator class="identity"/>
        </id>

        <!--
                @Column(name = "TITLE", nullable = false, length = 10)
                private String title;
        -->
        <property name="title" type="string">
            <column name="TITLE" length="10" not-null="true"/>
        </property>

        <!--
                @Column(name = "NAME", nullable = false, length = 20)
                private String name;
        -->
        <property name="name" type="string">
            <column name="NAME" length="20" not-null="true"/>
        </property>

        <!--
            @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
            @JoinTable(name = "CUST_ADDR",
                       joinColumns = { @JoinColumn(name = "CUSTOMER_ID", nullable = false) },
                       inverseJoinColumns = { @JoinColumn(name = "ADDRESS_ID", nullable = false) }
            )
            private Set<Address> addresses = new HashSet<Address>(0);
        -->
        <set name="addresses" table="CUST_ADDR" lazy="true" fetch="select" cascade="all">
            <key>
                <column name="CUSTOMER_ID" not-null="true"/>
            </key>
            <many-to-many entity-name="tr.com.huseyinaydin.model.Address">
                <column name="ADDRESS_ID" not-null="true"/>
            </many-to-many>
        </set>

    </class>
</hibernate-mapping>