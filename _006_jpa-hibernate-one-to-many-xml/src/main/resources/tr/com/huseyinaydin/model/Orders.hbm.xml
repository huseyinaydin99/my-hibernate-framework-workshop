<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

	<!-- 
		@Entity
		@Table(name = "ORDERS")
		public class Orders { }
	 -->
	<class name="tr.com.huseyinaydin.model.Orders" table="ORDERS">

		<!-- 
				@Id
				@GeneratedValue(strategy = GenerationType.IDENTITY)
				@Column(name = "ORDER_ID", nullable = false)
				private int orderId;
		 -->		
		<id name="orderId" type="int">
			<column name="ORDER_ID" />
			<generator class="identity" />
		</id>
		
		
		<!-- 
				@Column(name = "CODE", nullable = false, unique = true, length = 20)
				private String code;
		 -->		
		<property name="code" type="string">
			<column name="CODE" length="20" not-null="true" unique="true" />
		</property>
		
		
		<!-- 
				@Column(name = "AMOUNT", precision = 10, scale = 2)
				private Float amount;
		 -->		
		<property name="amount" type="java.lang.Float">
			<column name="AMOUNT" precision="10" scale="2" />
		</property>
	

		<!-- 
				@Column(name = "ORDER_DATE", length = 10)
				private Date orderDate;
		 -->		
		<property name="orderDate" type="date">
			<column name="ORDER_DATE" length="10" />
		</property>	
	
	
		<!-- 
				@ManyToOne(fetch = FetchType.LAZY)
				@Fetch(FetchMode.SELECT)
				@JoinColumn(name = "CUSTOMER_ID", nullable = false)
				private Customer customer;
		 -->	
		<many-to-one name="customer" class="tr.com.huseyinaydin.model.Customer"	fetch="select">
			<column name="CUSTOMER_ID" not-null="true" />
		</many-to-one>
		
	</class>
</hibernate-mapping>